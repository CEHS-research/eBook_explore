[
["index.html", "Encyclopedia of Quantitative Methods in R, vol. 1: Data Wrangling Welcome Blocked Notes Code and Output The Authors", " Encyclopedia of Quantitative Methods in R, vol. 1: Data Wrangling Sarah Schwartz &amp; Tyson Barrett Last updated: 2019-05-14 Welcome Backgroup and links to other volumes of this encyclopedia may be found at the Encyclopedia’s Home Website. Blocked Notes Thoughout all the eBooks in this encyclopedia, several small secitons will be blocked out in the following ways: These blocks denote an area UNDER CONSTRUCTION, so check back often. This massive undertaking started during the summer of 2018 and is far from complete. The outline of seven volumes is given above despite any one being complete. Feedback is welcome via either author’s email. These blocks denote something EXTREMELY IMPORTANT. Do NOT skip these notes as they will be used very sparingly. These blocks denote something to DOWNLOAD. This may include software installations, example datasets, or notebook code files. These blocks denote something INTERESTING. These point out information we found of interest or added value. These blocks denote LINKS to other websites. This may include instructional video clips, articles, or blog posts. We are all about NOT re-creating the wheel. If somebody else has described or illustrated a topic well, we celebrate it! Code and Output This is how \\(R\\) code is shown: 1 + 1 This is what the output of the \\(R\\) code above will look: ## [1] 2 The Authors Dr. Sarah Schwartz Dr. Tyson Barrett www.SarahSchwartzStats.com www.TysonBarrett.com Sarah.Schwartz@usu.edu Tyson.Barrett@usu.edu Statistical Consulting Studio Data Science and Discover Unit Why choose R ? Check it out: an article from Fall 2016… No more excuses: R is better than SPSS for psychology undergrads, and students agree FYI This entire encyclopedia is written in \\(R Markdown\\), using \\(R Studio\\) as the text editor and the bookdown package to turn a collection of markdown documents into a coherent whole. The book’s source code is hosted on GitHub. If you notice typos or other issues, feel free to email either of the authors. This work is licensed under the Attribution-NonCommercial-NoDerivatives 4.0 International License. "],
["intro-ihnos-experiemnt.html", "1 Intro: Ihno’s Experiemnt 1.1 Background of Data 1.2 Import &amp; Wrangle the Data", " 1 Intro: Ihno’s Experiemnt library(tidyverse) # super helpful everything! library(haven) # inporting SPSS, SAS, &amp; Stata data files 1.1 Background of Data Cohen (2013): has made the data from his textbook “Explaining Spychological Statistics, 4th edition” available on his website The data come from a hypothetical study performed by Ihno (pronounced “Eee-know”), an advanced doctoral student, who was the teaching assistant (TA) for several sections of a statistics course. The 100 participants in the data set are the students who were enrolled in Ihno’s sections, and voluntarily consented to be in her study, which was approved by the appropriate review board at her hypothetical school. Her data were collected on two different days. On the ﬁrst day of classes, the students who came to one of Ihno’s sections ﬁlled in a brief background questionnaire on which they provided contact information, some qualitative data (gender, undergrad major, why they had enrolled in statistics (reason), and whether they have a habit of drinking coffee), and some quantitative data (number of math courses already completed (prevmath), the score they received on a diagnostic math background quiz they were all required to take before registering for statistics mathquiz, and a rating of their math phobia on a scale from 0 to 10). You will see that, due to late registration and other factors, not all of Ihno’s students took the diagnostic math background quiz. The rest of Ihno’s data were collected as part of an experiment that she conducted during her recitation sessions on one day in the middle of the semester. (The one exception is that her students took a regular 10 question quiz the week before her experiment (statquiz), and she decided to add those scores to her data set.) At the beginning of the experiment, Ihno explained how each student could take his or her own pulse. She then provided a half-minute interval during which they counted the number of beats, and then wrote down twice that number as their heart rate (hr_base) in beats per minute (bpm). Then, each student reported how many cups of coffee they had consumed since waking up that morning (num_cups), and ﬁlled out an anxiety questionnaire consisting of 10 items, each rated (0 to 4) on a 5-point Likertscale. Total scores could range from 0 to 40, and provided a measure of baseline anxiety (anx_base). Next, Ihno announced a pop quiz. She handed out a page containing 11 multiple-choice statistics questions on material covered during the preceding two weeks, and asked the students to keep this page face down while taking and recording their pulse (hr_pre) and ﬁlling out a anxiety questionnaire (anx_pre). Then Ihno told the students they had 15 minutes to take the fairly difﬁcult quiz. She also told them that the ﬁrst 10 questions were worth 1 point each but that the 11th question was worth 3 points of extra credit. Ihno’s experimental manipulation consisted of varying the difﬁculty of the 11th question. Twenty-ﬁve quizzes were distributed at each level of difﬁculty of the ﬁnal question: easy, moderate, difﬁcult, and impossible to solve (exp_cond). After the quizzes were collected, Ihno asked the students to provide heart rate and anxiety data one more time (hr_post, anx_post). Finally, Ihno explained the experiment, adding that the 11th quiz question would not be scored and that, although the students would get back their quizzes with their score for the ﬁrst 10 items (statquiz), that score would not inﬂuence their grade for the statistics course. You can use a file’s link to read data directly off a website 1.2 Import &amp; Wrangle the Data The Cancer dataset is saved in SPSS format, which is evident from the .sav ending on the file name. The haven package is downloaded as part of the tidyverse set of packages, but is not automatically loaded. It must have its own library() function call (see above). The haven::read_spss() function works very simarly to the readxl::read_excel() function we used last chapter (Wickham and Miller 2019). Make sure the dataset is saved in the same folder as this file Make sure the that folder is the working directory data_ihno &lt;- read_spss(&quot;http://www.psych.nyu.edu/cohen/Ihno_dataset.sav&quot;) %&gt;% dplyr::rename_all(tolower) %&gt;% dplyr::mutate(genderF = factor(gender, levels = c(1, 2), labels = c(&quot;Female&quot;, &quot;Male&quot;))) %&gt;% dplyr::mutate(majorF = factor(major, levels = c(1, 2, 3, 4,5), labels = c(&quot;Psychology&quot;, &quot;Premed&quot;, &quot;Biology&quot;, &quot;Sociology&quot;, &quot;Economics&quot;))) %&gt;% dplyr::mutate(reasonF = factor(reason, levels = c(1, 2, 3), labels = c(&quot;Program requirement&quot;, &quot;Personal interest&quot;, &quot;Advisor recommendation&quot;))) %&gt;% dplyr::mutate(exp_condF = factor(exp_cond, levels = c(1, 2, 3, 4), labels = c(&quot;Easy&quot;, &quot;Moderate&quot;, &quot;Difficult&quot;, &quot;Impossible&quot;))) %&gt;% dplyr::mutate(coffeeF = factor(coffee, levels = c(0, 1), labels = c(&quot;Not a regular coffee drinker&quot;, &quot;Regularly drinks coffee&quot;))) glimpse(data_ihno) Observations: 100 Variables: 23 $ sub_num &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1... $ gender &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... $ major &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... $ reason &lt;dbl&gt; 3, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1... $ exp_cond &lt;dbl&gt; 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4... $ coffee &lt;dbl&gt; 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1... $ num_cups &lt;dbl&gt; 0, 0, 0, 0, 1, 1, 0, 2, 0, 2, 1, 0, 1, 2, 3, 0, 0, 3... $ phobia &lt;dbl&gt; 1, 1, 4, 4, 10, 4, 4, 4, 4, 5, 5, 4, 7, 4, 3, 8, 4, ... $ prevmath &lt;dbl&gt; 3, 4, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1... $ mathquiz &lt;dbl&gt; 43, 49, 26, 29, 31, 20, 13, 23, 38, NA, 29, 32, 18, ... $ statquiz &lt;dbl&gt; 6, 9, 8, 7, 6, 7, 3, 7, 8, 7, 8, 8, 1, 5, 8, 3, 8, 7... $ exp_sqz &lt;dbl&gt; 7, 11, 8, 8, 6, 6, 4, 7, 7, 6, 10, 7, 3, 4, 6, 1, 7,... $ hr_base &lt;dbl&gt; 71, 73, 69, 72, 71, 70, 71, 77, 73, 78, 74, 73, 73, ... $ hr_pre &lt;dbl&gt; 68, 75, 76, 73, 83, 71, 70, 87, 72, 76, 72, 74, 76, ... $ hr_post &lt;dbl&gt; 65, 68, 72, 78, 74, 76, 66, 84, 67, 74, 73, 74, 78, ... $ anx_base &lt;dbl&gt; 17, 17, 19, 19, 26, 12, 12, 17, 20, 20, 21, 32, 19, ... $ anx_pre &lt;dbl&gt; 22, 19, 14, 13, 30, 15, 16, 19, 14, 24, 25, 35, 23, ... $ anx_post &lt;dbl&gt; 20, 16, 15, 16, 25, 19, 17, 22, 17, 19, 22, 33, 20, ... $ genderF &lt;fct&gt; Female, Female, Female, Female, Female, Female, Fema... $ majorF &lt;fct&gt; Psychology, Psychology, Psychology, Psychology, Psyc... $ reasonF &lt;fct&gt; Advisor recommendation, Personal interest, Program r... $ exp_condF &lt;fct&gt; Easy, Easy, Easy, Easy, Easy, Moderate, Moderate, Mo... $ coffeeF &lt;fct&gt; Regularly drinks coffee, Not a regular coffee drinke... "],
["intro-cancer-experiemnt.html", "2 Intro: Cancer Experiemnt 2.1 Source of Data 2.2 Description of the Study 2.3 Variables 2.4 Import Data 2.5 Wrangle Data", " 2 Intro: Cancer Experiemnt library(tidyverse) # super helpful everything! library(haven) # inporting SPSS, SAS, &amp; Stata data files 2.1 Source of Data Mid-Michigan Medical Center, Midland, Michigan, 1999: A study of oral condition of cancer patients. 2.2 Description of the Study The data set contains part of the data for a study of oral condition of cancer patients conducted at the Mid-Michigan Medical Center. The oral conditions of the patients were measured and recorded at the initial stage, at the end of the second week, at the end of the fourth week, and at the end of the sixth week. The variables age, initial weight and initial cancer stage of the patients were recorded. Patients were divided into two groups at random: One group received a placebo and the other group received aloe juice treatment. Sample size n = 25 patients with neck cancer. The treatment is Aloe Juice. 2.3 Variables ID patient identification number trt treatment group 0 placebo 1 aloe juice age patient’s age, in years weightin patient’s weight (pounds) at the initial stage stage initial cancer stage coded 1 through 4 totalcin oral condition at the initial stage totalcw2 oral condition at the end of week 2 totalcw4 oral condition at the end of week 4 totalcw6 oral condition at the end of week 6 2.4 Import Data The Cancer dataset is saved in SPSS format, which is evident from the .sav ending on the file name. The haven package is downloaded as part of the tidyverse set of packages, but is not automatically loaded. It must have its own library() function call (see above). The haven::read_spss() function works very simarly to the readxl::read_excel() function we used last chapter (Wickham and Miller 2019). Make sure the dataset is saved in the same folder as this file Make sure the that folder is the working directory cancer_raw &lt;- haven::read_spss(&quot;https://github.com/CEHS-research/PSY-6600_students/raw/master/Data/Cancer.sav&quot;) tibble::glimpse(cancer_raw) Observations: 25 Variables: 9 $ ID &lt;dbl&gt; 1, 5, 6, 9, 11, 15, 21, 26, 31, 35, 39, 41, 45, 2, 12... $ TRT &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,... $ AGE &lt;dbl&gt; 52, 77, 60, 61, 59, 69, 67, 56, 61, 51, 46, 65, 67, 4... $ WEIGHIN &lt;dbl&gt; 124.0, 160.0, 136.5, 179.6, 175.8, 167.6, 186.0, 158.... $ STAGE &lt;dbl&gt; 2, 1, 4, 1, 2, 1, 1, 3, 1, 1, 4, 1, 1, 2, 4, 1, 2, 1,... $ TOTALCIN &lt;dbl&gt; 6, 9, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 8, 7, 6, 4, 6, 6,... $ TOTALCW2 &lt;dbl&gt; 6, 6, 9, 7, 7, 6, 11, 11, 9, 4, 8, 6, 8, 16, 10, 6, 1... $ TOTALCW4 &lt;dbl&gt; 6, 10, 17, 9, 16, 6, 11, 15, 6, 8, 11, 9, 9, 9, 11, 8... $ TOTALCW6 &lt;dbl&gt; 7, 9, 19, 3, 13, 11, 10, 15, 8, 7, 11, 6, 10, 10, 9, ... 2.5 Wrangle Data cancer_clean &lt;- cancer_raw %&gt;% dplyr::rename_all(tolower) %&gt;% dplyr::mutate(id = factor(id)) %&gt;% dplyr::mutate(trt = factor(trt, labels = c(&quot;Placebo&quot;, &quot;Aloe Juice&quot;))) %&gt;% dplyr::mutate(stage = factor(stage)) tibble::glimpse(cancer_clean) Observations: 25 Variables: 9 $ id &lt;fct&gt; 1, 5, 6, 9, 11, 15, 21, 26, 31, 35, 39, 41, 45, 2, 12... $ trt &lt;fct&gt; Placebo, Placebo, Placebo, Placebo, Placebo, Placebo,... $ age &lt;dbl&gt; 52, 77, 60, 61, 59, 69, 67, 56, 61, 51, 46, 65, 67, 4... $ weighin &lt;dbl&gt; 124.0, 160.0, 136.5, 179.6, 175.8, 167.6, 186.0, 158.... $ stage &lt;fct&gt; 2, 1, 4, 1, 2, 1, 1, 3, 1, 1, 4, 1, 1, 2, 4, 1, 2, 1,... $ totalcin &lt;dbl&gt; 6, 9, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 8, 7, 6, 4, 6, 6,... $ totalcw2 &lt;dbl&gt; 6, 6, 9, 7, 7, 6, 11, 11, 9, 4, 8, 6, 8, 16, 10, 6, 1... $ totalcw4 &lt;dbl&gt; 6, 10, 17, 9, 16, 6, 11, 15, 6, 8, 11, 9, 9, 9, 11, 8... $ totalcw6 &lt;dbl&gt; 7, 9, 19, 3, 13, 11, 10, 15, 8, 7, 11, 6, 10, 10, 9, ... cancer_clean # A tibble: 25 x 9 id trt age weighin stage totalcin totalcw2 totalcw4 totalcw6 &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1 Placebo 52 124 2 6 6 6 7 2 5 Placebo 77 160 1 9 6 10 9 3 6 Placebo 60 136. 4 7 9 17 19 4 9 Placebo 61 180. 1 6 7 9 3 5 11 Placebo 59 176. 2 6 7 16 13 6 15 Placebo 69 168. 1 6 6 6 11 7 21 Placebo 67 186 1 6 11 11 10 8 26 Placebo 56 158 3 6 11 15 15 9 31 Placebo 61 213. 1 6 9 6 8 10 35 Placebo 51 189 1 6 4 8 7 # ... with 15 more rows "],
["summary-statistics.html", "3 Summary Statistics 3.1 All Variables in a Dataset 3.2 A Subset of Varaibles in a Datasets", " 3 Summary Statistics Using the psych::describe() function library(psych) # Lots of good tidbits The describe() function from the psych package returns an extensive listing of basic summary statistics for every variable in a dataset (Revelle 2019). vars number order of the variables in this table n how many non-missing values there are mean the average or arithmetic mean sd the standard deviation median the 50th percentile or Q2 trimmed the mean after removing the top and bottom 10% of values mad median absolute deviation (from the median) DO NOT WORRY ABOUT! min the minimum or lowest value max the maximum or highest value range full range of values, max - min skew skewness (no SE for skewness given) kurtosis kurtosis (no SE for kurtosis given) se the standard error for the MEAN, not the skewness or kurtosis 3.1 All Variables in a Dataset cancer_clean %&gt;% psych::describe() # A tibble: 9 x 13 vars n mean sd median trimmed mad min max range skew &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1 25 13 7.36 13 13 8.90 1 25 24 0 2 2 25 1.44 0.507 1 1.43 0 1 2 1 0.227 3 3 25 59.6 12.9 60 60.0 11.9 27 86 59 -0.307 4 4 25 178. 32.0 173. 177. 21.1 124 261. 137. 0.730 5 5 25 2.88 1.24 2 2.81 1.48 1 5 4 0.726 6 6 25 6.52 1.53 6 6.33 0 4 12 8 1.80 7 7 25 8.28 2.54 8 8.10 2.97 4 16 12 1.01 8 8 25 10.4 3.47 10 10.2 2.97 6 17 11 0.487 9 9 23 9.48 3.49 9 9.21 2.97 3 19 16 0.770 # ... with 2 more variables: kurtosis &lt;dbl&gt;, se &lt;dbl&gt; NOTE The names of categorical variables (factors) are followed by an astrics to indicate that summary statistics should not be evaluated since the variable is not continuous or on an interval scale. 3.2 A Subset of Varaibles in a Datasets It is better to avoid calculating summary statistics for categorical variables in the first place by first restricting the dataset to only continuous variables using a dplyr::select() step. Make sure to use a dplyr::select(var1, var2, ..., var12) step to select only the variables of interest. cancer_clean %&gt;% dplyr::select(age, weighin, totalcin, totalcw2, totalcw4, totalcw6) %&gt;% psych::describe() # A tibble: 6 x 13 vars n mean sd median trimmed mad min max range skew &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1 25 59.6 12.9 60 60.0 11.9 27 86 59 -0.307 2 2 25 178. 32.0 173. 177. 21.1 124 261. 137. 0.730 3 3 25 6.52 1.53 6 6.33 0 4 12 8 1.80 4 4 25 8.28 2.54 8 8.10 2.97 4 16 12 1.01 5 5 25 10.4 3.47 10 10.2 2.97 6 17 11 0.487 6 6 23 9.48 3.49 9 9.21 2.97 3 19 16 0.770 # ... with 2 more variables: kurtosis &lt;dbl&gt;, se &lt;dbl&gt; "],
["frequency-distribution-tables.html", "4 Frequency Distribution Tables 4.1 For a Single Categorical Variable 4.2 For a Single Continuous Variable 4.3 Stratify -by- a categorical factor", " 4 Frequency Distribution Tables Using furniture::tableF() function library(furniture) # nice tables of descriptives 4.1 For a Single Categorical Variable cancer_clean %&gt;% furniture::tableF(stage) ------------------------------------ stage Freq CumFreq Percent CumPerc 0 1 1 4.00% 4.00% 1 12 13 48.00% 52.00% 2 6 19 24.00% 76.00% 3 1 20 4.00% 80.00% 4 5 25 20.00% 100.00% ------------------------------------ data_ihno %&gt;% furniture::tableF(majorF) ----------------------------------------- majorF Freq CumFreq Percent CumPerc Psychology 29 29 29.00% 29.00% Premed 25 54 25.00% 54.00% Biology 21 75 21.00% 75.00% Sociology 15 90 15.00% 90.00% Economics 10 100 10.00% 100.00% ----------------------------------------- 4.2 For a Single Continuous Variable The table can get very long if there are many different values for a continuous variable. data_ihno %&gt;% furniture::tableF(statquiz) --------------------------------------- statquiz Freq CumFreq Percent CumPerc 1 1 1 1.00% 1.00% 3 5 6 5.00% 6.00% 4 5 11 5.00% 11.00% 5 8 19 8.00% 19.00% 6 12 31 12.00% 31.00% 7 26 57 26.00% 57.00% 8 33 90 33.00% 90.00% 9 8 98 8.00% 98.00% 10 2 100 2.00% 100.00% --------------------------------------- You may specify how many values you would like displayed with the n = # option. data_ihno %&gt;% furniture::tableF(statquiz, n = 6) --------------------------------------- statquiz Freq CumFreq Percent CumPerc 1 1 1 1.00% 1.00% 3 5 6 5.00% 6.00% 4 5 11 5.00% 11.00% ... ... ... ... ... 7 26 57 26.00% 57.00% 8 33 90 33.00% 90.00% 9 8 98 8.00% 98.00% 10 2 100 2.00% 100.00% --------------------------------------- 4.3 Stratify -by- a categorical factor data_ihno %&gt;% dplyr::group_by(genderF) %&gt;% furniture::tableF(majorF) ----------------------------------------- Female Freq CumFreq Percent CumPerc Psychology 19 19 33.33% 33.33% Premed 11 30 19.30% 52.63% Biology 11 41 19.30% 71.93% Sociology 12 53 21.05% 92.98% Economics 4 57 7.02% 100.00% ----------------------------------------- ----------------------------------------- Male Freq CumFreq Percent CumPerc Psychology 10 10 23.26% 23.26% Premed 14 24 32.56% 55.81% Biology 10 34 23.26% 79.07% Sociology 3 37 6.98% 86.05% Economics 6 43 13.95% 100.00% ----------------------------------------- "],
["simple-and-stratified-descriptive-tables.html", "5 Simple and Stratified Descriptive Tables 5.1 For a Single Categorical Variable 5.2 For a Single Continuous Variable 5.3 For a Subset of Variables 5.4 Customize the Variable Labels 5.5 Stratify -by- a categorical factor 5.6 Add a TOTAL Column", " 5 Simple and Stratified Descriptive Tables Using the furniture::table1() function library(furniture) # nice tables of descriptives The table1() function in the furniture package returns a much smaller listing of summary statistics (Barrett, Brignone, and Laxman 2019). Categorical Variables: count (percentage) within each category Continuous Variables: mean (standard deviation) 5.1 For a Single Categorical Variable data_ihno %&gt;% furniture::table1(majorF) --------------------------------- Mean/Count (SD/%) n = 100 majorF Psychology 29 (29%) Premed 25 (25%) Biology 21 (21%) Sociology 15 (15%) Economics 10 (10%) --------------------------------- 5.2 For a Single Continuous Variable data_ihno %&gt;% furniture::table1(statquiz) ---------------------------- Mean/Count (SD/%) n = 100 statquiz 6.9 (1.7) ---------------------------- 5.3 For a Subset of Variables The variables desired can also be listed inside the function (selarate with commas). cancer_clean %&gt;% furniture::table1(age, weighin, stage, totalcin) ---------------------------- Mean/Count (SD/%) n = 25 age 59.6 (12.9) weighin 178.3 (32.0) stage 0 1 (4%) 1 12 (48%) 2 6 (24%) 3 1 (4%) 4 5 (20%) totalcin 6.5 (1.5) ---------------------------- data_ihno %&gt;% furniture::table1(majorF, reasonF, statquiz) --------------------------------------------- Mean/Count (SD/%) n = 100 majorF Psychology 29 (29%) Premed 25 (25%) Biology 21 (21%) Sociology 15 (15%) Economics 10 (10%) reasonF Program requirement 41 (41%) Personal interest 29 (29%) Advisor recommendation 30 (30%) statquiz 6.9 (1.7) --------------------------------------------- 5.4 Customize the Variable Labels cancer_clean %&gt;% furniture::table1(&quot;Age, years&quot; = age, &quot;Weight, pounds&quot; = weighin, &quot;Cancer Stage&quot; = stage, &quot;Oral Condition&quot; = totalcin) ---------------------------------- Mean/Count (SD/%) n = 25 Age, years 59.6 (12.9) Weight, pounds 178.3 (32.0) Cancer Stage 0 1 (4%) 1 12 (48%) 2 6 (24%) 3 1 (4%) 4 5 (20%) Oral Condition 6.5 (1.5) ---------------------------------- data_ihno %&gt;% furniture::table1(&quot;Reason For Enrolling&quot; = reasonF, &quot;Coffee Drinker&quot; = coffeeF, &quot;Math Phobia&quot; = phobia, &quot;Statistics Quiz&quot; = statquiz, &quot;Mathematics Quiz&quot; = mathquiz) --------------------------------------------------- Mean/Count (SD/%) n = 85 Reason For Enrolling Program requirement 33 (38.8%) Personal interest 27 (31.8%) Advisor recommendation 25 (29.4%) Coffee Drinker Not a regular coffee drinker 50 (58.8%) Regularly drinks coffee 35 (41.2%) Math Phobia 3.2 (2.5) Statistics Quiz 6.8 (1.7) Mathematics Quiz 29.1 (9.5) --------------------------------------------------- 5.5 Stratify -by- a categorical factor You may use a dplyr::group_by(grouping_var) step before the furniture::table1() step to create summary statistics for different subgroups. cancer_clean %&gt;% dplyr::group_by(trt) %&gt;% furniture::table1(&quot;Age, years&quot; = age, &quot;Weight, pounds&quot; = weighin, &quot;Cancer Stage&quot; = stage, &quot;Oral Condition&quot; = totalcin) ------------------------------------------ trt Placebo Aloe Juice n = 14 n = 11 Age, years 59.8 (9.0) 59.5 (17.2) Weight, pounds 167.5 (23.0) 192.0 (37.4) Cancer Stage 0 0 (0%) 1 (9.1%) 1 8 (57.1%) 4 (36.4%) 2 3 (21.4%) 3 (27.3%) 3 1 (7.1%) 0 (0%) 4 2 (14.3%) 3 (27.3%) Oral Condition 6.6 (0.9) 6.5 (2.1) ------------------------------------------ data_ihno %&gt;% dplyr::group_by(genderF) %&gt;% furniture::table1(&quot;College Major&quot; = majorF, &quot;Reason Enrolled&quot; = reasonF, &quot;Statistics Quiz&quot; = statquiz) ------------------------------------------------- genderF Female Male n = 57 n = 43 College Major Psychology 19 (33.3%) 10 (23.3%) Premed 11 (19.3%) 14 (32.6%) Biology 11 (19.3%) 10 (23.3%) Sociology 12 (21.1%) 3 (7%) Economics 4 (7%) 6 (14%) Reason Enrolled Program requirement 23 (40.4%) 18 (41.9%) Personal interest 16 (28.1%) 13 (30.2%) Advisor recommendation 18 (31.6%) 12 (27.9%) Statistics Quiz 6.8 (1.7) 6.9 (1.7) ------------------------------------------------- data_ihno %&gt;% dplyr::mutate(phobia_cut3 = cut(phobia, breaks = c(0, 2, 4, 10), include.lowest = TRUE)) %&gt;% dplyr::group_by(phobia_cut3) %&gt;% furniture::table1(&quot;College Major&quot; = majorF, &quot;Reason Enrolled&quot; = reasonF, &quot;Statistics Quiz&quot; = statquiz) ------------------------------------------------------------ phobia_cut3 [0,2] (2,4] (4,10] n = 39 n = 37 n = 24 College Major Psychology 7 (17.9%) 12 (32.4%) 10 (41.7%) Premed 11 (28.2%) 9 (24.3%) 5 (20.8%) Biology 7 (17.9%) 10 (27%) 4 (16.7%) Sociology 7 (17.9%) 4 (10.8%) 4 (16.7%) Economics 7 (17.9%) 2 (5.4%) 1 (4.2%) Reason Enrolled Program requirement 4 (10.3%) 23 (62.2%) 14 (58.3%) Personal interest 25 (64.1%) 3 (8.1%) 1 (4.2%) Advisor recommendation 10 (25.6%) 11 (29.7%) 9 (37.5%) Statistics Quiz 7.6 (1.3) 6.6 (1.6) 6.1 (2.0) ------------------------------------------------------------ 5.6 Add a TOTAL Column cancer_clean %&gt;% dplyr::group_by(trt) %&gt;% furniture::table1(&quot;Age, years&quot; = age, &quot;Weight, pounds&quot; = weighin, &quot;Cancer Stage&quot; = stage, &quot;Oral Condition&quot; = totalcin, total = TRUE) ------------------------------------------------------- trt Total Placebo Aloe Juice n = 25 n = 14 n = 11 Age, years 59.6 (12.9) 59.8 (9.0) 59.5 (17.2) Weight, pounds 178.3 (32.0) 167.5 (23.0) 192.0 (37.4) Cancer Stage 0 1 (4%) 0 (0%) 1 (9.1%) 1 12 (48%) 8 (57.1%) 4 (36.4%) 2 6 (24%) 3 (21.4%) 3 (27.3%) 3 1 (4%) 1 (7.1%) 0 (0%) 4 5 (20%) 2 (14.3%) 3 (27.3%) Oral Condition 6.5 (1.5) 6.6 (0.9) 6.5 (2.1) ------------------------------------------------------- data_ihno %&gt;% dplyr::group_by(genderF) %&gt;% furniture::table1(&quot;College Major&quot; = majorF, &quot;Reason Enrolled&quot; = reasonF, &quot;Statistics Quiz&quot; = statquiz, total = TRUE) ----------------------------------------------------------- genderF Total Female Male n = 100 n = 57 n = 43 College Major Psychology 29 (29%) 19 (33.3%) 10 (23.3%) Premed 25 (25%) 11 (19.3%) 14 (32.6%) Biology 21 (21%) 11 (19.3%) 10 (23.3%) Sociology 15 (15%) 12 (21.1%) 3 (7%) Economics 10 (10%) 4 (7%) 6 (14%) Reason Enrolled Program requirement 41 (41%) 23 (40.4%) 18 (41.9%) Personal interest 29 (29%) 16 (28.1%) 13 (30.2%) Advisor recommendation 30 (30%) 18 (31.6%) 12 (27.9%) Statistics Quiz 6.9 (1.7) 6.8 (1.7) 6.9 (1.7) ----------------------------------------------------------- "],
["barplots.html", "6 Barplots 6.1 Single categorical variable", " 6 Barplots Using the ggplot2::geom_bar() function library(tidyverse) # super helpful everything, including ggplot Reminder: Steps before the ggplot() are combined with pipes %&gt;%, whereas layers of the plot are combined with the addition symbol +. 6.1 Single categorical variable 6.1.1 Default bins/binwidth data_ihno %&gt;% ggplot(aes(majorF)) + geom_bar() "],
["histograms.html", "7 Histograms 7.1 Single continuous variable 7.2 Fill in the color -by- a factor", " 7 Histograms Using the ggplot2::geom_histogram() function library(tidyverse) # super helpful everything, including ggplot Reminder: Steps before the ggplot() are combined with pipes %&gt;%, whereas layers of the plot are combined with the addition symbol +. 7.1 Single continuous variable 7.1.1 Default bins/binwidth data_ihno %&gt;% ggplot(aes(phobia)) + geom_histogram() 7.1.2 Specify number of bins data_ihno %&gt;% ggplot(aes(phobia)) + geom_histogram(bins = 6) 7.1.3 Specify bin width data_ihno %&gt;% ggplot(aes(phobia)) + geom_histogram(binwidth = 1) 7.2 Fill in the color -by- a factor data_ihno %&gt;% dplyr::mutate(phobia_cut3 = cut(phobia, breaks = c(0, 2, 4, 10), include.lowest = TRUE)) %&gt;% ggplot(aes(phobia, fill = phobia_cut3)) + geom_histogram(binwidth = 1) "],
["boxplots.html", "8 Boxplots 8.1 Single continuous variable 8.2 Single Box -for- a Subset 8.3 Multiple Boxes -by- a Factor 8.4 Multiple Boxes -by- 2 Factors 8.5 Multiple Boxes -for- a Subset AND -by- 2 Factors 8.6 Multiple Boxes -for- Repeated Measurements", " 8 Boxplots Using the ggplot2::geom_boxplot() function library(tidyverse) # super helpful everything, including ggplot For boxplots, you must specify the variable of interest within the aesthetics as the y variable: ggplot(aes(y = continuous_var)) before adding the geom_boxplot() layer (Wickham et al. 2019). Reminder: Steps BEFORE the ggplot() are combined with pipes %&gt;%, whereas layers of the plot are combined with the addition symbol +. 8.1 Single continuous variable If you only want to produce a single boxplot, then the aesthetics must include some quoted text as the x variable. cancer_clean %&gt;% ggplot(aes(x = &quot;Full Data Set&quot;, y = weighin)) + geom_boxplot() 8.2 Single Box -for- a Subset 8.2.1 One Requirement Where as the dplyr::select() function specifies which VARIABLES to reduce down to, the dplyr::filter() function specifies which ROWS or PARTICIPANTS to reduce down to. When using a dplyr::filter() step, make sure to change the x = \"text\", too. cancer_clean %&gt;% dplyr::filter(weighin &lt; 172) %&gt;% ggplot(aes(x = &quot;Weigh At Baseline &lt; 172&quot;, y = weighin)) + geom_boxplot() 8.2.2 Two Requirements When testing for a match to a value (for equality) use == instead of = in the dplyr::filter() step. Use the &amp; symbol to require multiple conditions for the subset, but only include one quoted text phrase for x. cancer_clean %&gt;% dplyr::filter(weighin &gt;= 150 &amp; trt == &quot;Placebo&quot;) %&gt;% ggplot(aes(x = &quot;Placebo and at least 150 Pounds&quot;, y = weighin)) + geom_boxplot() 8.2.3 A Requirement Specified with a List A helpful symbol-set is %in%, which tests if the thing before it is included in the list of elements that comes after it. cancer_clean %&gt;% dplyr::filter(trt == &quot;Aloe Juice&quot; &amp; stage %in% c(2, 3, 4)) %&gt;% ggplot(aes(x = &quot;On Aloe Juice and Stage 2-4&quot;, y = weighin)) + geom_boxplot() 8.3 Multiple Boxes -by- a Factor There are three ways to included a categorical variable to break the sample into groups. You may specify the factor with: fill the variable is denoted with different colors filling the boxes x the horizontal axis is marked for all levels facet_grid() a panel is create for each level 8.3.1 Use fill = var_name cancer_clean %&gt;% ggplot(aes(x = &quot;Full Sample&quot;, y = weighin, fill = trt)) + geom_boxplot() 8.3.2 Use x = var_name cancer_clean %&gt;% ggplot(aes(x = trt, y = weighin)) + geom_boxplot() 8.3.3 Use facet_grid(. ~ var_name) cancer_clean %&gt;% ggplot(aes(x = &quot;Full Sample&quot;, y = weighin)) + geom_boxplot() + facet_grid(. ~ trt) 8.4 Multiple Boxes -by- 2 Factors You may combine any of the three previous specification, one per categorical (factor) variable. 8.4.1 Use fill = var_name_1 and x = var_name_2 cancer_clean %&gt;% ggplot(aes(x = stage, y = weighin, fill = trt)) + geom_boxplot() 8.4.2 Use x = var_name_1 and facet_grid(. ~ var_name_2) cancer_clean %&gt;% ggplot(aes(x = trt, y = weighin)) + geom_boxplot() + facet_grid(. ~ stage) 8.4.3 Use fill = var_name_1 and facet_grid(. ~ var_name_2) cancer_clean %&gt;% ggplot(aes(x = &quot;Full Sample&quot;, y = weighin, fill = trt)) + geom_boxplot() + facet_grid(. ~ stage) 8.5 Multiple Boxes -for- a Subset AND -by- 2 Factors The layers maybe combined to create more complicated plots. Here is a plot for only participants who were in stage 1, 2, or 4 (n &gt; 1 per stage), and compares the final oral condition for each stage between participants receiving the Aloe treatment vs. the placebo. cancer_clean %&gt;% dplyr::filter(stage %in% c(&quot;1&quot;, &quot;2&quot;, &quot;4&quot;)) %&gt;% ggplot(aes(x = stage, y = totalcw6, fill = trt)) + geom_boxplot() 8.6 Multiple Boxes -for- Repeated Measurements The ordinal data is in what is called “WIDE” format, with the repeated measurements as separate variables, sitting side-by-side. Each participant’s data is contained in a single line (25 lines here). To sort a dataset, use the dplyr::arrange() function and include the variable or variables you wish to sort by in the parentheses. cancer_clean %&gt;% dplyr::arrange(id) %&gt;% dplyr::select(id, totalcin, totalcw2, totalcw4, totalcw6) # A tibble: 25 x 5 id totalcin totalcw2 totalcw4 totalcw6 &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1 6 6 6 7 2 2 7 16 9 10 3 5 9 6 10 9 4 6 7 9 17 19 5 9 6 7 9 3 6 11 6 7 16 13 7 12 6 10 11 9 8 14 4 6 8 7 9 15 6 6 6 11 10 16 6 11 11 14 # ... with 15 more rows Some data manipulations is needed to “stack” the repeated measurement variables (baseline, week 2, week 4, week 6) into a single variable we will call value. We also need another new variable that denotes the measurement time, which we will call time. The resulting dataset is said to be in “LONG” format. Now there will be one line for each observation time on each participant (4 x 25 = 100 lines here). This is done with with the tidyr::gather(key = \"new_time_var\", value = \"new_value_var\", old_var_1, old_var_2, ...) function. Ignore the message that says “attributes are not identical across measure variables; they will be dropped”. cancer_clean %&gt;% tidyr::gather(key = &quot;time&quot;, value = &quot;value&quot;, totalcin, totalcw2, totalcw4, totalcw6) %&gt;% dplyr::arrange(id, time) %&gt;% dplyr::select(id, time, value) # A tibble: 100 x 3 id time value &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; 1 1 totalcin 6 2 1 totalcw2 6 3 1 totalcw4 6 4 1 totalcw6 7 5 2 totalcin 7 6 2 totalcw2 16 7 2 totalcw4 9 8 2 totalcw6 10 9 5 totalcin 9 10 5 totalcw2 6 # ... with 90 more rows Once the data is in this format, you can create box plots for each time point. Ignore the additional message that says “Removed 2 rows containing non-finite values (stat_boxplot)”. This is just alerting you to the fact that two people are missing their week 6 oral condiditon values. cancer_clean %&gt;% tidyr::gather(key = &quot;time&quot;, value = &quot;value&quot;, totalcin, totalcw2, totalcw4, totalcw6) %&gt;% ggplot(aes(x = time, y = value)) + geom_boxplot() 8.6.1 Multiple Boxes -for- Repeated Measurements AND -by- a Factor cancer_clean %&gt;% tidyr::gather(key = &quot;time&quot;, value = &quot;value&quot;, totalcin, totalcw2, totalcw4, totalcw6) %&gt;% ggplot(aes(x = time, y = value, fill = trt)) + geom_boxplot() cancer_clean %&gt;% tidyr::gather(key = &quot;time&quot;, value = &quot;value&quot;, totalcin, totalcw2, totalcw4, totalcw6) %&gt;% ggplot(aes(x = time, y = value)) + geom_boxplot() + facet_grid(. ~ trt) "],
["scatterplots.html", "9 Scatterplots 9.1 Two continuous variables", " 9 Scatterplots Using the ggplot2::geom_point() function library(tidyverse) # super helpful everything, including ggplot 9.1 Two continuous variables data_ihno %&gt;% ggplot() + aes(x = mathquiz, y = statquiz) + geom_point() data_ihno %&gt;% dplyr::mutate(phobia_cut3 = cut(phobia, breaks = c(0, 2, 4, 10), include.lowest = TRUE)) %&gt;% ggplot() + aes(x = mathquiz, y = statquiz, color = phobia_cut3) + geom_point() data_ihno %&gt;% dplyr::mutate(phobia_cut3 = cut(phobia, breaks = c(0, 2, 4, 10), include.lowest = TRUE)) %&gt;% ggplot() + aes(x = mathquiz, y = statquiz) + geom_count() + facet_grid(. ~ phobia_cut3) "],
["references.html", "References", " References "]
]
